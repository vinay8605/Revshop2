# API Gateway Configuration
spring.application.name=API-Gateway
server.port=8099

# Eureka Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Disable serving static resources (since we're routing to a service)
spring.web.resources.add-mappings=false

# Spring Cloud Gateway Configuration for Routing
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USERSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/registercr/**

spring.cloud.gateway.routes[1].id=product-service
spring.cloud.gateway.routes[1].uri=lb://PRODUCT
spring.cloud.gateway.routes[1].predicates[0]=Path=/products/**



# Spring Cloud Gateway Configuration for Cart Service
spring.cloud.gateway.routes[2].id=cart-service
spring.cloud.gateway.routes[2].uri=lb://CARTSERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/cart/**

spring.cloud.gateway.routes[3].id=SELLERSERVICE
spring.cloud.gateway.routes[3].uri=lb://SELLERSERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/sellers/**

spring.cloud.gateway.routes[4].id=product-service-dashboard
spring.cloud.gateway.routes[4].uri=lb://PRODUCT
spring.cloud.gateway.routes[4].predicates[0]=Path=/seller/dashboard/**

spring.cloud.gateway.routes[5].id=ADMIN
spring.cloud.gateway.routes[5].uri=lb://ADMIN
spring.cloud.gateway.routes[5].predicates[0]=Path=/admin/**
# Use Load Balancer for Routing to User Service
spring.cloud.loadbalancer.enabled=true
